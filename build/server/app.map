{"version":3,"sources":["launch.js","../util/discord/getGuildNames.ts","discord/onReady.ts","discord/main.ts","../util/stringifyAvoidCircularReference.ts","app.ts"],"names":["carlo","require","path","app","launch","on","process","exit","serveFolder","resolve","__dirname","exposeFunction","load"],"mappings":"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","file":"app.map","sourceRoot":"..\\..\\src\\server","sourcesContent":["const carlo = require('carlo');\nconst path = require('path');\n\n// [API](https://github.com/GoogleChromeLabs/carlo/blob/master/API.md)\n\nexport default async function() {\n  // Launch the browser.\n  const app = await carlo.launch();\n\n  // Terminate Node.js process on app window closing.\n  app.on('exit', () => {\n    process.exit();\n  });\n\n  // Tell carlo where your web files are located.\n  app.serveFolder(path.resolve(__dirname));\n  app.serveFolder(path.resolve(__dirname, '..'));\n  app.serveFolder(path.resolve(__dirname, '..', 'client'));\n\n  await app.exposeFunction('exit', () => {\n    app.exit();\n    process.exit();\n  });\n\n  // Expose 'env' function in the web environment.\n  // await app.exposeFunction('env', _ => process.env);\n\n  // Navigate to the main page of your app.\n  await app.load(path.resolve(__dirname, '..', 'client', 'index.html'));\n}\n","import { Client } from 'discord.js';\n\nexport default (client: Client) => Array.from(client.guilds).map(v => v[1].name);\n","import { Client } from 'discord.js';\nimport getGuildNames from '../../util/discord/getGuildNames';\nimport { Store } from '../app';\n\nexport default (store: Store) => () => {\n  getGuildNames(store.client!);\n};\n","import { Client, Guild } from 'discord.js';\nimport { Response } from 'express';\nimport onReady from './onReady';\nimport { Store } from '../app';\n\nexport default async (token: string, loginResponse: Response, store: Store) => {\n  store.client = new Client();\n  store.client.on('ready', onReady(store));\n  store.client\n    .login(token)\n    .then(() => loginResponse.status(200).send('Success'))\n    .then(() => {\n      store.guilds = store.client!.guilds;\n    })\n    .then(() => {\n      // console.log(store.client);\n    })\n    .catch(e => loginResponse.status(400).send('LoginFailed'));\n};\n","const mapToArray = (any: any) => (any instanceof Map ? Array.from(any) : any);\n\nexport default (any: any) => {\n  var cache: any = [];\n  return JSON.stringify(any, function(key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.indexOf(value) !== -1) {\n        // Circular reference found, discard key\n        return;\n      }\n      // Store value in our collection\n      cache.push(value);\n    }\n    return mapToArray(value);\n  });\n};\n","import launch from './launch';\nimport express from 'express';\nimport bodyparser from 'body-parser';\nimport main from './discord/main';\nimport { Guild, Client } from 'discord.js';\nimport { string } from 'prop-types';\nimport parseFromGuildsToArray from '../util/discord/parseFromGuildsToArray';\nimport stringifyAvoidCircularReference from '../util/stringifyAvoidCircularReference';\n\nconst app = express();\nconst PORT = 3000;\nexport class Store {\n  guilds?: Map<string, Guild>;\n  client?: Client;\n  constructor() {\n    this.guilds = undefined;\n    this.client = undefined;\n  }\n  get guildNames() {\n    return this.client ? Array.from(this.client.guilds).map(v => v[1].name) : [];\n  }\n}\nconst store = new Store();\n\napp.use(function(req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n  next();\n});\napp.use(bodyparser.json());\n\napp.get('/', (req, res) => {});\napp.get('/guilds', (req, res) => {\n  if (store.guilds) {\n    res.send({\n      guilds: stringifyAvoidCircularReference(store.guilds),\n    });\n  } else {\n    res.send(400);\n  }\n});\n\napp.post('/token', (req, res) => {\n  main(req.body.token, res, store);\n});\n\napp.listen(PORT, () => {\n  console.log(`app listen in port ${PORT}`);\n});\n\nlaunch();\n"]}